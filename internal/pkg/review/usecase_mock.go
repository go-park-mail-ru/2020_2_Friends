// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/friends/internal/pkg/review (interfaces: Usecase)

// Package review is a generated GoMock package.
package review

import (
	models "github.com/friends/internal/pkg/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUsecase is a mock of Usecase interface
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// AddReview mocks base method
func (m *MockUsecase) AddReview(arg0 models.Review) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddReview", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddReview indicates an expected call of AddReview
func (mr *MockUsecaseMockRecorder) AddReview(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddReview", reflect.TypeOf((*MockUsecase)(nil).AddReview), arg0)
}

// GetUserReviews mocks base method
func (m *MockUsecase) GetUserReviews(arg0 string) ([]models.Review, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserReviews", arg0)
	ret0, _ := ret[0].([]models.Review)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserReviews indicates an expected call of GetUserReviews
func (mr *MockUsecaseMockRecorder) GetUserReviews(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserReviews", reflect.TypeOf((*MockUsecase)(nil).GetUserReviews), arg0)
}

// GetVendorReviews mocks base method
func (m *MockUsecase) GetVendorReviews(arg0 string) (models.VendorReviewsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVendorReviews", arg0)
	ret0, _ := ret[0].(models.VendorReviewsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVendorReviews indicates an expected call of GetVendorReviews
func (mr *MockUsecaseMockRecorder) GetVendorReviews(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVendorReviews", reflect.TypeOf((*MockUsecase)(nil).GetVendorReviews), arg0)
}
